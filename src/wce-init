#!/usr/bin/env node

const program = require('commander');
const mkdirp = require('mkdirp');
const chalk = require('chalk');
const package = require('../package.json');
const fs = require('fs');

program.parse(process.argv);

process.stdout.write(chalk.gray('---initializing---', '\n'));
const folders = [
  'src/actions',
  'src/assets',
  'src/containers',
  'src/reducers',
  'src/utils',
  'src/views',
  'test'
];
process.stdout.write(chalk.blue('   mkdirp', folders.join(' '), '\n'));
folders.forEach(mkdirp.sync);

const ignored = [
  'node_modules',
  'npm-debug.log',
  'dist',
  'lib'
];
process.stdout.write(chalk.blue('   .gitignore', ignored.join(' '), '\n'));
fs.writeFileSync('.gitignore', ignored.join('\n'), 'utf-8');

process.stdout.write(chalk.blue('   README.md', '\n'));
fs.writeFileSync('README.md', `> generated by ${package.name}@${package.version}`, 'utf-8');

process.stdout.write(chalk.blue('   src/app.js', '\n'));
fs.writeFileSync('src/app.js', '// dev & standalone entry point', 'utf-8');

process.stdout.write(chalk.blue('   src/index.js', '\n'));
fs.writeFileSync('src/index.js', '// npm package entry point', 'utf-8');

process.stdout.write(chalk.gray('---initializing done---', '\n'));
