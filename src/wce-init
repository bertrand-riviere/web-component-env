#!/usr/bin/env node

const program = require('commander');
const mkdirp = require('mkdirp');
const path = require('path');
const chalk = require('chalk');
const package = require('../package.json');
const fs = require('fs');
const fsExtra = require('fs-extra');

const write = (path, data) => {
  try {
    fs.writeFileSync(path, data, { flag: 'wx' }, 'utf-8');
  } catch (err) {
    process.stdout.write(chalk.yellow('   EEXIST: file already exists', '\n'));
  }
};

program.parse(process.argv);

const wcePath = path.dirname(__dirname);

process.stdout.write(chalk.blue('   .gitignore', '\n'));
fsExtra.copySync(path.join(wcePath, 'default.gitignore'), '.gitignore', { overwrite: false });

process.stdout.write(chalk.blue('   .npmignore', '\n'));
fsExtra.copySync(path.join(wcePath, 'default.npmignore'), '.npmignore', { overwrite: false });

process.stdout.write(chalk.blue('   README.md', '\n'));
write('README.md', `> generated by ${package.name}@${package.version}`);

process.stdout.write(chalk.blue('   src/app.js', '\n'));
write('src/app.js', '// dev entry point');

process.stdout.write(chalk.blue('   src/index.js', '\n'));
write('src/index.js', '// umd entry point');

process.stdout.write(chalk.gray('---initializing done---', '\n'));
